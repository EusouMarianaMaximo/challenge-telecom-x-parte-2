# **Telecom X ‚Äì Parte 2: Modelo Preditivo de Churn**  

## **üéØ Miss√£o e Objetivos**  
Desenvolver um **modelo preditivo** para identificar clientes com alta probabilidade de cancelamento (churn) na Telecom X, gerando **insights acion√°veis** para estrat√©gias de reten√ß√£o.  

### **Principais Etapas**  
1. **Pr√©-processamento de dados**: Tratamento de valores ausentes, codifica√ß√£o de vari√°veis e normaliza√ß√£o.  
2. **Sele√ß√£o de features**: An√°lise de correla√ß√£o e redu√ß√£o de multicolinearidade (VIF).  
3. **Modelagem**: Treinamento e compara√ß√£o de **Regress√£o Log√≠stica** e **Random Forest**.  
4. **Avalia√ß√£o**: M√©tricas como acur√°cia, precis√£o, recall e F1-score.  
5. **Interpreta√ß√£o**: Identifica√ß√£o dos fatores mais impactantes no churn.  

---

## **üìä Principais Resultados**  

### **Fatores Cr√≠ticos para Churn**  
- **Contratos mensais** t√™m 3x mais evas√£o que anuais.  
- **Fibra √≥ptica** apresenta maior churn (poss√≠vel rela√ß√£o com custo/qualidade).  
- **Clientes novos** (menos de 1 ano) s√£o 60% mais propensos a cancelar.  
- **Servi√ßos adicionais** (ex: suporte t√©cnico) reduzem evas√£o em 35%.  

### **Desempenho dos Modelos**  
| M√©trica          | Regress√£o Log√≠stica | Random Forest |  
|------------------|---------------------|---------------|  
| **Acur√°cia**     | 75,15%              | 77,33%        |  
| **Recall**       | **78,25%**          | 62,57%        |  
| **Precis√£o**     | 52,14%              | **56,61%**    |  

‚úÖ **Modelo escolhido**: **Regress√£o log√≠stica**, por seu **alto recall** (captura mais clientes em risco).  

---

## **üöÄ Estrat√©gias de Reten√ß√£o**  
1. **Converter contratos mensais em anuais** com benef√≠cios exclusivos.  
2. **Oferta de servi√ßos adicionais** (ex: suporte t√©cnico gratuito no primeiro ano).  
3. **Programa de fidelidade** para clientes com menos de 12 meses.  
4. **Revis√£o do pacote de fibra √≥ptica** (custos/qualidade).  

---

## **üìå Como Reproduzir a An√°lise**  
1. **Pr√©-requisitos**: Python 3.8+, bibliotecas (pandas, scikit-learn, imbalanced-learn).  
2. **Execu√ß√£o**:  
   ```bash  
   git clone [reposit√≥rio]  
   jupyter notebook telecom_churn_part2.ipynb  
   ```  
